Imports Microsoft.EntityFrameworkCore.Scaffolding
Imports Microsoft.EntityFrameworkCore.Metadata.Internal
Imports System

'------------------------------------------------------------------------------
'<auto-generated>
'    This code was generated by a tool.
'    Runtime Version: 16.0.0.0
' 
'    Changes to this file may cause incorrect behavior and will be lost if
'    the code is regenerated.
'</auto-generated>
'------------------------------------------------------------------------------
Namespace Templates
    '''<summary>
    '''Class to produce the template output
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")>
    Partial Friend Class MyDbContextGenerator
        Inherits MyCodeGeneratorBase
        '''<summary>
        '''Create the template output
        '''</summary>
        Public Overrides Function TransformText() As String
            Me.Write("Imports System" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "Imports Microsoft.VisualBasic" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "Imports Microsoft.EntityFrameworkC" &
                    "ore" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10))
            If Not String.IsNullOrEmpty(ModelNamespace) Then
                Me.Write("Imports ")
                Me.Write(Me.ToStringHelper.ToStringWithCulture(ModelNamespace))
                Me.Write("" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10))
            End If
            Me.Write("" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10))
            If Not String.IsNullOrEmpty([Namespace]) Then
                Me.Write("Namespace ")
                Me.Write(Me.ToStringHelper.ToStringWithCulture([Namespace]))
                Me.Write("" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10))
            End If
            Me.Write("" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & Global.Microsoft.VisualBasic.ChrW(9) & "Public Partial Class ")
            Me.Write(Me.ToStringHelper.ToStringWithCulture(ContextName))
            Me.Write("" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & "Inherits DbContext" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & "Public Sub New()" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & "End Sub" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & "Public Sub New(optio" &
                    "ns As DbContextOptions(Of ")
            Me.Write(Me.ToStringHelper.ToStringWithCulture(ContextName))
            Me.Write("))" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "              MyBase.New(options)" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & "End Sub" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & Global.Microsoft.VisualBasic.ChrW(9) & "End Class" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & Global.Microsoft.VisualBasic.ChrW(9))
            For Each entityType In Model.GetEntityTypes()
                Me.Write("" & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & "Public Overridable Property ")
                Me.Write(Me.ToStringHelper.ToStringWithCulture(entityType.GetDbSetName()))
                Me.Write(" As DbSet(Of ")
                Me.Write(Me.ToStringHelper.ToStringWithCulture(entityType.Name))
                Me.Write(")" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & Global.Microsoft.VisualBasic.ChrW(9))
            Next
            Me.Write("" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10))
            If Not String.IsNullOrEmpty([Namespace]) Then
                Me.Write("End Namespace" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10))
            End If
            Return Me.GenerationEnvironment.ToString
        End Function

        Private _ModelField As Global.Microsoft.EntityFrameworkCore.Metadata.IModel

        '''<summary>
        '''Access the Model parameter of the template.
        '''</summary>
        Private ReadOnly Property Model() As Global.Microsoft.EntityFrameworkCore.Metadata.IModel
            Get
                Return Me._ModelField
            End Get
        End Property

        Private _ModelNamespaceField As String

        '''<summary>
        '''Access the ModelNamespace parameter of the template.
        '''</summary>
        Private ReadOnly Property ModelNamespace() As String
            Get
                Return Me._ModelNamespaceField
            End Get
        End Property

        Private _NamespaceField As String

        '''<summary>
        '''Access the Namespace parameter of the template.
        '''</summary>
        Private ReadOnly Property [Namespace]() As String
            Get
                Return Me._NamespaceField
            End Get
        End Property

        Private _ContextNameField As String

        '''<summary>
        '''Access the ContextName parameter of the template.
        '''</summary>
        Private ReadOnly Property ContextName() As String
            Get
                Return Me._ContextNameField
            End Get
        End Property

        Private _ConnectionStringField As String

        '''<summary>
        '''Access the ConnectionString parameter of the template.
        '''</summary>
        Private ReadOnly Property ConnectionString() As String
            Get
                Return Me._ConnectionStringField
            End Get
        End Property

        Private _SuppressConnectionStringWarningField As Boolean

        '''<summary>
        '''Access the SuppressConnectionStringWarning parameter of the template.
        '''</summary>
        Private ReadOnly Property SuppressConnectionStringWarning() As Boolean
            Get
                Return Me._SuppressConnectionStringWarningField
            End Get
        End Property

        Private _UseDataAnnotationsField As Boolean

        '''<summary>
        '''Access the UseDataAnnotations parameter of the template.
        '''</summary>
        Private ReadOnly Property UseDataAnnotations() As Boolean
            Get
                Return Me._UseDataAnnotationsField
            End Get
        End Property

        Private _CodeField As Global.Microsoft.EntityFrameworkCore.Design.ICSharpHelper

        '''<summary>
        '''Access the Code parameter of the template.
        '''</summary>
        Private ReadOnly Property Code() As Global.Microsoft.EntityFrameworkCore.Design.ICSharpHelper
            Get
                Return Me._CodeField
            End Get
        End Property

        Private _ProviderCodeField As Global.Microsoft.EntityFrameworkCore.Scaffolding.IProviderConfigurationCodeGenerator

        '''<summary>
        '''Access the ProviderCode parameter of the template.
        '''</summary>
        Private ReadOnly Property ProviderCode() As Global.Microsoft.EntityFrameworkCore.Scaffolding.IProviderConfigurationCodeGenerator
            Get
                Return Me._ProviderCodeField
            End Get
        End Property

        Private _AnnotationCodeField As Global.Microsoft.EntityFrameworkCore.Design.IAnnotationCodeGenerator

        '''<summary>
        '''Access the AnnotationCode parameter of the template.
        '''</summary>
        Private ReadOnly Property AnnotationCode() As Global.Microsoft.EntityFrameworkCore.Design.IAnnotationCodeGenerator
            Get
                Return Me._AnnotationCodeField
            End Get
        End Property


        '''<summary>
        '''Initialize the template
        '''</summary>
        Public Overrides Sub Initialize()
            MyBase.Initialize()

            If (Me.Errors.HasErrors = False) Then
                Dim ModelValueAcquired As Boolean = False
                If Me.Session.ContainsKey("Model") Then
                    Me._ModelField = CType(Me.Session("Model"), Global.Microsoft.EntityFrameworkCore.Metadata.IModel)
                    ModelValueAcquired = True
                End If
                If (ModelValueAcquired = False) Then
                    Dim data As Object = Global.System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("Model")
                    If (Not (data) Is Nothing) Then
                        Me._ModelField = CType(data, Global.Microsoft.EntityFrameworkCore.Metadata.IModel)
                    End If
                End If
                Dim ModelNamespaceValueAcquired As Boolean = False
                If Me.Session.ContainsKey("ModelNamespace") Then
                    Me._ModelNamespaceField = CType(Me.Session("ModelNamespace"), String)
                    ModelNamespaceValueAcquired = True
                End If
                If (ModelNamespaceValueAcquired = False) Then
                    Dim data As Object = Global.System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("ModelNamespace")
                    If (Not (data) Is Nothing) Then
                        Me._ModelNamespaceField = CType(data, String)
                    End If
                End If
                Dim NamespaceValueAcquired As Boolean = False
                If Me.Session.ContainsKey("Namespace") Then
                    Me._NamespaceField = CType(Me.Session("Namespace"), String)
                    NamespaceValueAcquired = True
                End If
                If (NamespaceValueAcquired = False) Then
                    Dim data As Object = Global.System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("Namespace")
                    If (Not (data) Is Nothing) Then
                        Me._NamespaceField = CType(data, String)
                    End If
                End If
                Dim ContextNameValueAcquired As Boolean = False
                If Me.Session.ContainsKey("ContextName") Then
                    Me._ContextNameField = CType(Me.Session("ContextName"), String)
                    ContextNameValueAcquired = True
                End If
                If (ContextNameValueAcquired = False) Then
                    Dim data As Object = Global.System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("ContextName")
                    If (Not (data) Is Nothing) Then
                        Me._ContextNameField = CType(data, String)
                    End If
                End If
                Dim ConnectionStringValueAcquired As Boolean = False
                If Me.Session.ContainsKey("ConnectionString") Then
                    Me._ConnectionStringField = CType(Me.Session("ConnectionString"), String)
                    ConnectionStringValueAcquired = True
                End If
                If (ConnectionStringValueAcquired = False) Then
                    Dim data As Object = Global.System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("ConnectionString")
                    If (Not (data) Is Nothing) Then
                        Me._ConnectionStringField = CType(data, String)
                    End If
                End If
                Dim SuppressConnectionStringWarningValueAcquired As Boolean = False
                If Me.Session.ContainsKey("SuppressConnectionStringWarning") Then
                    Me._SuppressConnectionStringWarningField = CType(Me.Session("SuppressConnectionStringWarning"), Boolean)
                    SuppressConnectionStringWarningValueAcquired = True
                End If
                If (SuppressConnectionStringWarningValueAcquired = False) Then
                    Dim data As Object = Global.System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("SuppressConnectionStringWarning")
                    If (Not (data) Is Nothing) Then
                        Me._SuppressConnectionStringWarningField = CType(data, Boolean)
                    End If
                End If
                Dim UseDataAnnotationsValueAcquired As Boolean = False
                If Me.Session.ContainsKey("UseDataAnnotations") Then
                    Me._UseDataAnnotationsField = CType(Me.Session("UseDataAnnotations"), Boolean)
                    UseDataAnnotationsValueAcquired = True
                End If
                If (UseDataAnnotationsValueAcquired = False) Then
                    Dim data As Object = Global.System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("UseDataAnnotations")
                    If (Not (data) Is Nothing) Then
                        Me._UseDataAnnotationsField = CType(data, Boolean)
                    End If
                End If
                Dim CodeValueAcquired As Boolean = False
                If Me.Session.ContainsKey("Code") Then
                    Me._CodeField = CType(Me.Session("Code"), Global.Microsoft.EntityFrameworkCore.Design.ICSharpHelper)
                    CodeValueAcquired = True
                End If
                If (CodeValueAcquired = False) Then
                    Dim data As Object = Global.System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("Code")
                    If (Not (data) Is Nothing) Then
                        Me._CodeField = CType(data, Global.Microsoft.EntityFrameworkCore.Design.ICSharpHelper)
                    End If
                End If
                Dim ProviderCodeValueAcquired As Boolean = False
                If Me.Session.ContainsKey("ProviderCode") Then
                    Me._ProviderCodeField = CType(Me.Session("ProviderCode"), Global.Microsoft.EntityFrameworkCore.Scaffolding.IProviderConfigurationCodeGenerator)
                    ProviderCodeValueAcquired = True
                End If
                If (ProviderCodeValueAcquired = False) Then
                    Dim data As Object = Global.System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("ProviderCode")
                    If (Not (data) Is Nothing) Then
                        Me._ProviderCodeField = CType(data, Global.Microsoft.EntityFrameworkCore.Scaffolding.IProviderConfigurationCodeGenerator)
                    End If
                End If
                Dim AnnotationCodeValueAcquired As Boolean = False
                If Me.Session.ContainsKey("AnnotationCode") Then
                    Me._AnnotationCodeField = CType(Me.Session("AnnotationCode"), Global.Microsoft.EntityFrameworkCore.Design.IAnnotationCodeGenerator)
                    AnnotationCodeValueAcquired = True
                End If
                If (AnnotationCodeValueAcquired = False) Then
                    Dim data As Object = Global.System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("AnnotationCode")
                    If (Not (data) Is Nothing) Then
                        Me._AnnotationCodeField = CType(data, Global.Microsoft.EntityFrameworkCore.Design.IAnnotationCodeGenerator)
                    End If
                End If


            End If
        End Sub


    End Class
End Namespace
