Imports Microsoft.EntityFrameworkCore.Scaffolding
Imports Microsoft.EntityFrameworkCore.Metadata.Internal
Imports System

'------------------------------------------------------------------------------
'<auto-generated>
'    Ce code a été généré par un outil.
'    Version du runtime : 16.0.0.0
' 
'    Les changements apportés à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
'    le code est régénéré.
'</auto-generated>
'------------------------------------------------------------------------------
Namespace Templates
    '''<summary>
    '''Class to produce the template output
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")>  _
    Partial Friend Class MyDbContextGenerator
        Inherits MyCodeGeneratorBase
        '''<summary>
        '''Create the template output
        '''</summary>
        Public Overrides Function TransformText() As String
            Me.Write(""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10))
            Me.Write(""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10))
            Me.Write(""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10))
            Me.Write("Imports System"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Imports Microsoft.VisualBasic"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Imports Microsoft.EntityFrameworkC"& _ 
                    "ore"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10))
 If Not String.IsNullOrEmpty(ModelNamespace) Then 
            Me.Write("Imports ")
            Me.Write(Me.ToStringHelper.ToStringWithCulture(ModelNamespace))
            Me.Write(""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10))
 End If 
            Me.Write(""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10))
 If Not String.IsNullOrEmpty(ContextNamespace) Then 
            Me.Write("Namespace ")
            Me.Write(Me.ToStringHelper.ToStringWithCulture(ContextNamespace))
            Me.Write(""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10))
 End If 
            Me.Write(""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"Public Partial Class ")
            Me.Write(Me.ToStringHelper.ToStringWithCulture(contextName))
            Me.Write(""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"Inherits DbContext"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"Public Sub New()"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"End Sub"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"Public Sub New(optio"& _ 
                    "ns As DbContextOptions(Of ")
            Me.Write(Me.ToStringHelper.ToStringWithCulture(contextName))
            Me.Write("))"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              MyBase.New(options)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"End Sub"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10))
 For Each entityType in Model.GetEntityTypes() 
            Me.Write(""&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"Public Overridable Property ")
            Me.Write(Me.ToStringHelper.ToStringWithCulture(entityType.GetDbSetName()))
            Me.Write(" As DbSet(Of ")
            Me.Write(Me.ToStringHelper.ToStringWithCulture(entityType.Name))
            Me.Write(")"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10))
 Next	
 If model.GetEntityTypes().Any() Then 
            Me.Write(""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10))
  End If 
 For Each entityTypeError In model.GetEntityTypeErrors() 
            Me.Write(""&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"' ")
            Me.Write(Me.ToStringHelper.ToStringWithCulture(entityTypeError.Value))
            Me.Write(" Please see the warning messages."""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10))
 Next 
 If model.GetEntityTypeErrors().Count > 0 Then 
            Me.Write("        "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10))
 End If 
 If Not suppressOnConfiguring Then 
            Me.Write(""&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"If Not optionsBuilder.IsConfigured Then"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"optionsBuilder")
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Code.Fragment(ProviderCode.GenerateUseProvider(ConnectionString))))
            Me.Write(""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"End IF"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10))
 End If 
            Me.Write(""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"Protected Overrides Sub OnModelCreating(modelBuilder As ModelBuilder)"&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10))
 For Each entityType in Model.GetEntityTypes() 
            Me.Write("            modelBuilder.ApplyConfiguration(New ")
            Me.Write(Me.ToStringHelper.ToStringWithCulture(entityType.Name))
            Me.Write("Configuration())"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10))
 Next 
            Me.Write(""&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"End Sub"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"End Class"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10))
 If Not String.IsNullOrEmpty(ContextNamespace) Then 
            Me.Write("End Namespace"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10))
	End If 
            Return Me.GenerationEnvironment.ToString
        End Function

Private _ModelField As Global.Microsoft.EntityFrameworkCore.Metadata.IModel

'''<summary>
'''Access the Model parameter of the template.
'''</summary>
Private ReadOnly Property Model() As Global.Microsoft.EntityFrameworkCore.Metadata.IModel
    Get
        Return Me._ModelField
    End Get
End Property

Private _ContextNameField As String

'''<summary>
'''Access the ContextName parameter of the template.
'''</summary>
Private ReadOnly Property ContextName() As String
    Get
        Return Me._ContextNameField
    End Get
End Property

Private _ConnectionStringField As String

'''<summary>
'''Access the ConnectionString parameter of the template.
'''</summary>
Private ReadOnly Property ConnectionString() As String
    Get
        Return Me._ConnectionStringField
    End Get
End Property

Private _ContextNamespaceField As String

'''<summary>
'''Access the ContextNamespace parameter of the template.
'''</summary>
Private ReadOnly Property ContextNamespace() As String
    Get
        Return Me._ContextNamespaceField
    End Get
End Property

Private _ModelNamespaceField As String

'''<summary>
'''Access the ModelNamespace parameter of the template.
'''</summary>
Private ReadOnly Property ModelNamespace() As String
    Get
        Return Me._ModelNamespaceField
    End Get
End Property

Private _UseDataAnnotationsField As Boolean

'''<summary>
'''Access the UseDataAnnotations parameter of the template.
'''</summary>
Private ReadOnly Property UseDataAnnotations() As Boolean
    Get
        Return Me._UseDataAnnotationsField
    End Get
End Property

Private _SuppressConnectionStringWarningField As Boolean

'''<summary>
'''Access the SuppressConnectionStringWarning parameter of the template.
'''</summary>
Private ReadOnly Property SuppressConnectionStringWarning() As Boolean
    Get
        Return Me._SuppressConnectionStringWarningField
    End Get
End Property

Private _suppressOnConfiguringField As Boolean

'''<summary>
'''Access the suppressOnConfiguring parameter of the template.
'''</summary>
Private ReadOnly Property suppressOnConfiguring() As Boolean
    Get
        Return Me._suppressOnConfiguringField
    End Get
End Property

Private _CodeField As Global.EntityFrameworkCore.VisualBasic.Design.IVisualBasicHelper

'''<summary>
'''Access the Code parameter of the template.
'''</summary>
Private ReadOnly Property Code() As Global.EntityFrameworkCore.VisualBasic.Design.IVisualBasicHelper
    Get
        Return Me._CodeField
    End Get
End Property

Private _ProviderCodeField As Global.Microsoft.EntityFrameworkCore.Scaffolding.IProviderConfigurationCodeGenerator

'''<summary>
'''Access the ProviderCode parameter of the template.
'''</summary>
Private ReadOnly Property ProviderCode() As Global.Microsoft.EntityFrameworkCore.Scaffolding.IProviderConfigurationCodeGenerator
    Get
        Return Me._ProviderCodeField
    End Get
End Property

Private _AnnotationCodeField As Global.Microsoft.EntityFrameworkCore.Design.IAnnotationCodeGenerator

'''<summary>
'''Access the AnnotationCode parameter of the template.
'''</summary>
Private ReadOnly Property AnnotationCode() As Global.Microsoft.EntityFrameworkCore.Design.IAnnotationCodeGenerator
    Get
        Return Me._AnnotationCodeField
    End Get
End Property


'''<summary>
'''Initialize the template
'''</summary>
Public Overrides Sub Initialize()
    MyBase.Initialize
    If (Me.Errors.HasErrors = false) Then
Dim ModelValueAcquired As Boolean = false
If Me.Session.ContainsKey("Model") Then
    Me._ModelField = CType(Me.Session("Model"),Global.Microsoft.EntityFrameworkCore.Metadata.IModel)
    ModelValueAcquired = true
End If
If (ModelValueAcquired = false) Then
    Dim data As Object = Global.System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("Model")
    If (Not (data) Is Nothing) Then
        Me._ModelField = CType(data,Global.Microsoft.EntityFrameworkCore.Metadata.IModel)
    End If
End If
Dim ContextNameValueAcquired As Boolean = false
If Me.Session.ContainsKey("ContextName") Then
    Me._ContextNameField = CType(Me.Session("ContextName"),String)
    ContextNameValueAcquired = true
End If
If (ContextNameValueAcquired = false) Then
    Dim data As Object = Global.System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("ContextName")
    If (Not (data) Is Nothing) Then
        Me._ContextNameField = CType(data,String)
    End If
End If
Dim ConnectionStringValueAcquired As Boolean = false
If Me.Session.ContainsKey("ConnectionString") Then
    Me._ConnectionStringField = CType(Me.Session("ConnectionString"),String)
    ConnectionStringValueAcquired = true
End If
If (ConnectionStringValueAcquired = false) Then
    Dim data As Object = Global.System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("ConnectionString")
    If (Not (data) Is Nothing) Then
        Me._ConnectionStringField = CType(data,String)
    End If
End If
Dim ContextNamespaceValueAcquired As Boolean = false
If Me.Session.ContainsKey("ContextNamespace") Then
    Me._ContextNamespaceField = CType(Me.Session("ContextNamespace"),String)
    ContextNamespaceValueAcquired = true
End If
If (ContextNamespaceValueAcquired = false) Then
    Dim data As Object = Global.System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("ContextNamespace")
    If (Not (data) Is Nothing) Then
        Me._ContextNamespaceField = CType(data,String)
    End If
End If
Dim ModelNamespaceValueAcquired As Boolean = false
If Me.Session.ContainsKey("ModelNamespace") Then
    Me._ModelNamespaceField = CType(Me.Session("ModelNamespace"),String)
    ModelNamespaceValueAcquired = true
End If
If (ModelNamespaceValueAcquired = false) Then
    Dim data As Object = Global.System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("ModelNamespace")
    If (Not (data) Is Nothing) Then
        Me._ModelNamespaceField = CType(data,String)
    End If
End If
Dim UseDataAnnotationsValueAcquired As Boolean = false
If Me.Session.ContainsKey("UseDataAnnotations") Then
    Me._UseDataAnnotationsField = CType(Me.Session("UseDataAnnotations"),Boolean)
    UseDataAnnotationsValueAcquired = true
End If
If (UseDataAnnotationsValueAcquired = false) Then
    Dim data As Object = Global.System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("UseDataAnnotations")
    If (Not (data) Is Nothing) Then
        Me._UseDataAnnotationsField = CType(data,Boolean)
    End If
End If
Dim SuppressConnectionStringWarningValueAcquired As Boolean = false
If Me.Session.ContainsKey("SuppressConnectionStringWarning") Then
    Me._SuppressConnectionStringWarningField = CType(Me.Session("SuppressConnectionStringWarning"),Boolean)
    SuppressConnectionStringWarningValueAcquired = true
End If
If (SuppressConnectionStringWarningValueAcquired = false) Then
    Dim data As Object = Global.System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("SuppressConnectionStringWarning")
    If (Not (data) Is Nothing) Then
        Me._SuppressConnectionStringWarningField = CType(data,Boolean)
    End If
End If
Dim suppressOnConfiguringValueAcquired As Boolean = false
If Me.Session.ContainsKey("suppressOnConfiguring") Then
    Me._suppressOnConfiguringField = CType(Me.Session("suppressOnConfiguring"),Boolean)
    suppressOnConfiguringValueAcquired = true
End If
If (suppressOnConfiguringValueAcquired = false) Then
    Dim data As Object = Global.System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("suppressOnConfiguring")
    If (Not (data) Is Nothing) Then
        Me._suppressOnConfiguringField = CType(data,Boolean)
    End If
End If
Dim CodeValueAcquired As Boolean = false
If Me.Session.ContainsKey("Code") Then
    Me._CodeField = CType(Me.Session("Code"),Global.EntityFrameworkCore.VisualBasic.Design.IVisualBasicHelper)
    CodeValueAcquired = true
End If
If (CodeValueAcquired = false) Then
    Dim data As Object = Global.System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("Code")
    If (Not (data) Is Nothing) Then
        Me._CodeField = CType(data,Global.EntityFrameworkCore.VisualBasic.Design.IVisualBasicHelper)
    End If
End If
Dim ProviderCodeValueAcquired As Boolean = false
If Me.Session.ContainsKey("ProviderCode") Then
    Me._ProviderCodeField = CType(Me.Session("ProviderCode"),Global.Microsoft.EntityFrameworkCore.Scaffolding.IProviderConfigurationCodeGenerator)
    ProviderCodeValueAcquired = true
End If
If (ProviderCodeValueAcquired = false) Then
    Dim data As Object = Global.System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("ProviderCode")
    If (Not (data) Is Nothing) Then
        Me._ProviderCodeField = CType(data,Global.Microsoft.EntityFrameworkCore.Scaffolding.IProviderConfigurationCodeGenerator)
    End If
End If
Dim AnnotationCodeValueAcquired As Boolean = false
If Me.Session.ContainsKey("AnnotationCode") Then
    Me._AnnotationCodeField = CType(Me.Session("AnnotationCode"),Global.Microsoft.EntityFrameworkCore.Design.IAnnotationCodeGenerator)
    AnnotationCodeValueAcquired = true
End If
If (AnnotationCodeValueAcquired = false) Then
    Dim data As Object = Global.System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("AnnotationCode")
    If (Not (data) Is Nothing) Then
        Me._AnnotationCodeField = CType(data,Global.Microsoft.EntityFrameworkCore.Design.IAnnotationCodeGenerator)
    End If
End If


    End If
End Sub


    End Class
End Namespace
