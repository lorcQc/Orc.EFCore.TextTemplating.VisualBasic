Imports Microsoft.EntityFrameworkCore
Imports Microsoft.EntityFrameworkCore.Design
Imports Microsoft.EntityFrameworkCore.Metadata
Imports Microsoft.EntityFrameworkCore.Metadata.Conventions
Imports System

'------------------------------------------------------------------------------
'<auto-generated>
'    Ce code a été généré par un outil.
'    Version du runtime : 16.0.0.0
' 
'    Les changements apportés à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
'    le code est régénéré.
'</auto-generated>
'------------------------------------------------------------------------------
Namespace Templates
    '''<summary>
    '''Class to produce the template output
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")>  _
    Partial Friend Class MyEntityTypeConfigurationGenerator
        Inherits MyCodeGeneratorBase
        '''<summary>
        '''Create the template output
        '''</summary>
        Public Overrides Function TransformText() As String
            Me.Write(""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10))
            Me.Write(""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10))
            Me.Write(""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Imports Microsoft.EntityFrameworkCore"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Imports Microsoft.EntityFrameworkCore.Me"& _ 
                    "tadata.Builders"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"Imports ")
            Me.Write(Me.ToStringHelper.ToStringWithCulture(ModelNamespace))
            Me.Write(""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10))
 If Not String.IsNullOrEmpty(ContextNamespace) Then 
            Me.Write("Namespace ")
            Me.Write(Me.ToStringHelper.ToStringWithCulture(ContextNamespace))
            Me.Write(""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10))
 End If 
            Me.Write(""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10))

    Dim Name = EntityType.Name

            Me.Write(""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    public Class ")
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Name))
            Me.Write("Configuration"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        Implements IEntityTypeConfiguration(Of ")
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Name))
            Me.Write(")"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        Public Sub Configure(builder As EntityTypeBuilder(Of ")
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Name))
            Me.Write(")) Implements IEntityTypeConfiguration(Of ")
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Name))
            Me.Write(").Configure"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10))

        Dim primaryKey = EntityType.FindPrimaryKey()
        If primaryKey is nothing Then

            Me.Write("            builder.HasNoKey()"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10))

        Else If Not Enumerable.SequenceEqual(primaryKey.Properties,
                                             KeyDiscoveryConvention.DiscoverKeyProperties(
                                                CType(primaryKey.DeclaringEntityType, IConventionEntityType),
                                                primaryKey.DeclaringEntityType.GetProperties().Cast(Of IConventionProperty)())
                                            ) Then

            Me.Write("            builder.HasKey(")
            Me.Write(Me.ToStringHelper.ToStringWithCulture(Code.Lambda(primaryKey.Properties)))
            Me.Write(")"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10))

        End If

            Me.Write(""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        End Sub"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    End Class"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10))
 If Not String.IsNullOrEmpty(ContextNamespace) Then 
            Me.Write("End Namespace"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10))
	End If 
            Return Me.GenerationEnvironment.ToString
        End Function

Private _EntityTypeField As Global.Microsoft.EntityFrameworkCore.Metadata.IEntityType

'''<summary>
'''Access the EntityType parameter of the template.
'''</summary>
Private ReadOnly Property EntityType() As Global.Microsoft.EntityFrameworkCore.Metadata.IEntityType
    Get
        Return Me._EntityTypeField
    End Get
End Property

Private _ModelNamespaceField As String

'''<summary>
'''Access the ModelNamespace parameter of the template.
'''</summary>
Private ReadOnly Property ModelNamespace() As String
    Get
        Return Me._ModelNamespaceField
    End Get
End Property

Private _ContextNamespaceField As String

'''<summary>
'''Access the ContextNamespace parameter of the template.
'''</summary>
Private ReadOnly Property ContextNamespace() As String
    Get
        Return Me._ContextNamespaceField
    End Get
End Property

Private _UseDataAnnotationsField As Boolean

'''<summary>
'''Access the UseDataAnnotations parameter of the template.
'''</summary>
Private ReadOnly Property UseDataAnnotations() As Boolean
    Get
        Return Me._UseDataAnnotationsField
    End Get
End Property

Private _CodeField As Global.EntityFrameworkCore.VisualBasic.Design.IVisualBasicHelper

'''<summary>
'''Access the Code parameter of the template.
'''</summary>
Private ReadOnly Property Code() As Global.EntityFrameworkCore.VisualBasic.Design.IVisualBasicHelper
    Get
        Return Me._CodeField
    End Get
End Property

Private _AnnotationCodeField As Global.Microsoft.EntityFrameworkCore.Design.IAnnotationCodeGenerator

'''<summary>
'''Access the AnnotationCode parameter of the template.
'''</summary>
Private ReadOnly Property AnnotationCode() As Global.Microsoft.EntityFrameworkCore.Design.IAnnotationCodeGenerator
    Get
        Return Me._AnnotationCodeField
    End Get
End Property


'''<summary>
'''Initialize the template
'''</summary>
Public Overrides Sub Initialize()
    MyBase.Initialize
    If (Me.Errors.HasErrors = false) Then
Dim EntityTypeValueAcquired As Boolean = false
If Me.Session.ContainsKey("EntityType") Then
    Me._EntityTypeField = CType(Me.Session("EntityType"),Global.Microsoft.EntityFrameworkCore.Metadata.IEntityType)
    EntityTypeValueAcquired = true
End If
If (EntityTypeValueAcquired = false) Then
    Dim data As Object = Global.System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("EntityType")
    If (Not (data) Is Nothing) Then
        Me._EntityTypeField = CType(data,Global.Microsoft.EntityFrameworkCore.Metadata.IEntityType)
    End If
End If
Dim ModelNamespaceValueAcquired As Boolean = false
If Me.Session.ContainsKey("ModelNamespace") Then
    Me._ModelNamespaceField = CType(Me.Session("ModelNamespace"),String)
    ModelNamespaceValueAcquired = true
End If
If (ModelNamespaceValueAcquired = false) Then
    Dim data As Object = Global.System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("ModelNamespace")
    If (Not (data) Is Nothing) Then
        Me._ModelNamespaceField = CType(data,String)
    End If
End If
Dim ContextNamespaceValueAcquired As Boolean = false
If Me.Session.ContainsKey("ContextNamespace") Then
    Me._ContextNamespaceField = CType(Me.Session("ContextNamespace"),String)
    ContextNamespaceValueAcquired = true
End If
If (ContextNamespaceValueAcquired = false) Then
    Dim data As Object = Global.System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("ContextNamespace")
    If (Not (data) Is Nothing) Then
        Me._ContextNamespaceField = CType(data,String)
    End If
End If
Dim UseDataAnnotationsValueAcquired As Boolean = false
If Me.Session.ContainsKey("UseDataAnnotations") Then
    Me._UseDataAnnotationsField = CType(Me.Session("UseDataAnnotations"),Boolean)
    UseDataAnnotationsValueAcquired = true
End If
If (UseDataAnnotationsValueAcquired = false) Then
    Dim data As Object = Global.System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("UseDataAnnotations")
    If (Not (data) Is Nothing) Then
        Me._UseDataAnnotationsField = CType(data,Boolean)
    End If
End If
Dim CodeValueAcquired As Boolean = false
If Me.Session.ContainsKey("Code") Then
    Me._CodeField = CType(Me.Session("Code"),Global.EntityFrameworkCore.VisualBasic.Design.IVisualBasicHelper)
    CodeValueAcquired = true
End If
If (CodeValueAcquired = false) Then
    Dim data As Object = Global.System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("Code")
    If (Not (data) Is Nothing) Then
        Me._CodeField = CType(data,Global.EntityFrameworkCore.VisualBasic.Design.IVisualBasicHelper)
    End If
End If
Dim AnnotationCodeValueAcquired As Boolean = false
If Me.Session.ContainsKey("AnnotationCode") Then
    Me._AnnotationCodeField = CType(Me.Session("AnnotationCode"),Global.Microsoft.EntityFrameworkCore.Design.IAnnotationCodeGenerator)
    AnnotationCodeValueAcquired = true
End If
If (AnnotationCodeValueAcquired = false) Then
    Dim data As Object = Global.System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("AnnotationCode")
    If (Not (data) Is Nothing) Then
        Me._AnnotationCodeField = CType(data,Global.Microsoft.EntityFrameworkCore.Design.IAnnotationCodeGenerator)
    End If
End If


    End If
End Sub


    End Class
End Namespace
